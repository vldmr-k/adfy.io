services:
  Config:
    type: "*adfy.io/pkg/config.Config"
    returns: config.NewConfig("./../..")
  Db:
    type: "*adfy.io/pkg/db.Db"
    returns: "db.NewDb(@{Config})"
  Orm:
    type: "*adfy.io/pkg/db.Orm"
    returns: "db.NewGorm(@{Db})"
  JWT:
    type: "*adfy.io/pkg/jwt.JWT"
    returns: "jwt.NewJWT(@{Config})"
  Secure:
    type: "*adfy.io/pkg/secure.Secure"
    returns: "secure.NewSecure(6)"
  VerifyJWTHook:
    type: "*adfy.io/pkg/hook.VerifyJWTHook"
    returns: "hook.NewVerifyJWTHook(@{JWT})"


  UserService:
    type: "*adfy.io/internal/userservice.UserService"
    returns: "userservice.NewUserService(@{JWT}, @{Secure}, @{UserRepository}, @{AuthContext})"
  UserRepository:
    type: "*adfy.io/internal/userservice.UserRepository"
    returns: "userservice.NewUserRepository(@{Orm})"
  UserServiceServer:
    type: "adfy.io/rpc/user.TwirpServer"
    returns: user.NewUserServiceServer(@{UserService}, @{VerifyJWTHook}.WithJWTAuth("SignIn", "SignUp"))

 
  ProjectService:
    type: "*adfy.io/internal/projectservice.ProjectService"
    returns: "projectservice.NewProjectService()"
  ProjectRepository:
    type: "*adfy.io/internal/projectservice.ProjectRepository"
    returns: "projectservice.NewProjectRepository(@{Orm})"
  ProjectServiceServer:
    type: "adfy.io/rpc/project.TwirpServer"
    returns: "project.NewProjectServiceServer(@{ProjectService}, @{VerifyJWTHook}.WithJWTAuth())"


  AuthContext:
    type: "*adfy.io/pkg/ctx.AuthContext"
    returns: "ctx.NewAuthContext()"