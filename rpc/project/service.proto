syntax = "proto3";
package adfy.io.rpc.project;
option go_package = "adfy.io/rpc/project";

import "validate/validate.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "google/protobuf/empty.proto";


option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "Adfy.io Project Service Twirp/JSON API Documentation";
        version: "1.0";
    };
    external_docs: {
        url: "https://github.com/vldmr-k/adfy.io";
        description: "Adfy.io github repository";
    };
    schemes: HTTPS;
};


service ProjectService {


  rpc Create(CreateRequest) returns (CreateResponse);
  rpc Get(IdRequest) returns (GetResponse);
  rpc List(google.protobuf.Empty) returns (ListResponse);
  rpc Update(UpdateRequest) returns (UpdateResponse);
  rpc Delete(IdRequest) returns (google.protobuf.Empty);

}

message CreateRequest {
    string name = 1 [(validate.rules).string = {min_len: 3, max_len: 50}]; //required
    repeated string domain = 2 [
      (validate.rules).string = {min_len: 3, max_len: 50},
      (validate.rules).repeated.unique = true,
      (validate.rules).repeated.min_items = 1
    ]; //required
    string description = 3;
}

message CreateResponse {
  Project project = 1;
}

message UpdateRequest {
    string id = 1 [(validate.rules).string.uuid = true];
    string name = 2 [(validate.rules).string = {min_len: 3, max_len: 50}];
    repeated string domain = 3 [
      (validate.rules).string = {min_len: 3, max_len: 50},
      (validate.rules).repeated.unique = true,
      (validate.rules).repeated.min_items = 1
    ]; //required
    string description = 4;
}

message UpdateResponse {
  Project project = 1;
}


message GetResponse {
  Project project = 1;
}

message IdRequest {
  string id = 1;
}

message ListResponse {
  repeated Project projects = 1;
}


message Project {
  string id = 1;
  string name = 2;
  repeated string domain = 3;
  string description = 4;
  string embedCode = 5;
}
